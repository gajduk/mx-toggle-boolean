(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(null, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
			return classNames;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(6), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, react_1, classNames, Alert_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Switch = function (props) {
        return react_1.createElement("div", {
            className: classNames("widget-switch", props.className),
            style: props.style
        }, react_1.createElement("input", {
            checked: props.isChecked,
            className: classNames("widget-switch-checkbox", { enabled: props.status === "enabled" }),
            readOnly: true,
            type: "checkbox"
        }), react_1.createElement("div", {
            className: classNames("widget-switch-btn-wrapper", {
                "checked": props.isChecked,
                "disabled": props.status === "disabled",
                "no-switch": props.status === "no-context",
                "un-checked": !props.isChecked
            }),
            onClick: props.status === "enabled" ? props.onClick : undefined
        }, react_1.createElement("small", {
            className: classNames("widget-switch-btn", {
                left: !props.isChecked,
                right: props.isChecked
            })
        })), react_1.createElement(Alert_1.Alert, { message: props.alertMessage }));
    };
    exports.Switch.displayName = "Switch";
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = "/* https://raw.githubusercontent.com/mendix/atlas-framework/master/_variables.scss */\n.widget-switch-btn-wrapper {\n  margin-bottom: 8px; }\n  .widget-switch-btn-wrapper.disabled {\n    cursor: default; }\n  .widget-switch-btn-wrapper.no-switch .widget-switch-btn {\n    display: none !important; }\n    .widget-switch-btn-wrapper.no-switch .widget-switch-btn:active {\n      box-shadow: none; }\n\n.widget-switch .widget-switch-checkbox {\n  display: none; }\n\n.widget-switch.iOS .widget-switch-btn-wrapper {\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-radius: 20px;\n  cursor: pointer;\n  display: inline-block;\n  height: 30px;\n  position: relative;\n  vertical-align: middle;\n  width: 50px;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-box-sizing: content-box;\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n  -webkit-background-clip: content-box;\n  background-clip: content-box; }\n  .widget-switch.iOS .widget-switch-btn-wrapper.checked {\n    transition: border 0.4s, box-shadow 0.4s, background-color 1.2s; }\n  .widget-switch.iOS .widget-switch-btn-wrapper.un-checked {\n    border-color: #dfdfdf;\n    box-shadow: #dfdfdf 0 0 0 0 inset;\n    transition: border 0.4s, box-shadow 0.4s; }\n  .widget-switch.iOS .widget-switch-btn-wrapper .widget-switch-btn {\n    background: #fff;\n    border-radius: 100%;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\n    height: 30px;\n    position: absolute;\n    top: 0;\n    width: 30px; }\n    .widget-switch.iOS .widget-switch-btn-wrapper .widget-switch-btn.left {\n      left: 0;\n      transition: background-color 0.4s, left 0.2s; }\n      .widget-switch.iOS .widget-switch-btn-wrapper .widget-switch-btn.left:active {\n        width: 70%;\n        border-radius: 45%; }\n    .widget-switch.iOS .widget-switch-btn-wrapper .widget-switch-btn.right {\n      left: 20px;\n      transition: background-color 0.4s, left 0.2s;\n      background-color: white; }\n      .widget-switch.iOS .widget-switch-btn-wrapper .widget-switch-btn.right:active {\n        left: 30%;\n        transition: left 0s;\n        width: 70%;\n        border-radius: 45%; }\n  .widget-switch.iOS .widget-switch-btn-wrapper.disabled {\n    opacity: 0.5; }\n  .widget-switch.iOS .widget-switch-btn-wrapper.no-switch .left:active {\n    width: 30px;\n    border-radius: 50%; }\n  .widget-switch.iOS .widget-switch-btn-wrapper.no-switch .left .right:active {\n    width: 30px;\n    left: 20px;\n    border-radius: 50%; }\n\n.widget-switch.android .widget-switch-btn-wrapper {\n  position: relative;\n  display: block;\n  height: 20px;\n  width: 44px;\n  background: #898989;\n  border: none;\n  box-shadow: none;\n  border-radius: 100px;\n  cursor: pointer;\n  transition: all .3s ease; }\n  .widget-switch.android .widget-switch-btn-wrapper .widget-switch-btn {\n    position: absolute;\n    left: -2px;\n    top: -3px;\n    display: block;\n    width: 26px;\n    height: 26px;\n    border-radius: 100px;\n    background: white;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\n    content: '';\n    transition: all .3s ease; }\n  .widget-switch.android .widget-switch-btn-wrapper.checked {\n    background: #6FBEB5;\n    border: none;\n    box-shadow: none; }\n    .widget-switch.android .widget-switch-btn-wrapper.checked .widget-switch-btn {\n      left: 20px;\n      background: #179588; }\n  .widget-switch.android .widget-switch-btn-wrapper.disabled {\n    background: #D5D5D5;\n    pointer-events: none; }\n    .widget-switch.android .widget-switch-btn-wrapper.disabled .widget-switch-btn {\n      background: #BCBDBC; }\n\n.widget-switch.auto .widget-switch-btn-wrapper {\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-radius: 20px;\n  cursor: pointer;\n  display: inline-block;\n  height: 30px;\n  position: relative;\n  vertical-align: middle;\n  width: 50px;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-box-sizing: content-box;\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n  -webkit-background-clip: content-box;\n  background-clip: content-box; }\n  .widget-switch.auto .widget-switch-btn-wrapper.checked {\n    transition: border 0.4s, box-shadow 0.4s, background-color 1.2s; }\n  .widget-switch.auto .widget-switch-btn-wrapper.un-checked {\n    border-color: #dfdfdf;\n    box-shadow: #dfdfdf 0 0 0 0 inset;\n    transition: border 0.4s, box-shadow 0.4s; }\n  .widget-switch.auto .widget-switch-btn-wrapper .widget-switch-btn {\n    background: #fff;\n    border-radius: 100%;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\n    height: 30px;\n    position: absolute;\n    top: 0;\n    width: 30px; }\n    .widget-switch.auto .widget-switch-btn-wrapper .widget-switch-btn.left {\n      left: 0;\n      transition: background-color 0.4s, left 0.2s; }\n      .widget-switch.auto .widget-switch-btn-wrapper .widget-switch-btn.left:active {\n        width: 70%;\n        border-radius: 45%; }\n    .widget-switch.auto .widget-switch-btn-wrapper .widget-switch-btn.right {\n      left: 20px;\n      transition: background-color 0.4s, left 0.2s;\n      background-color: white; }\n      .widget-switch.auto .widget-switch-btn-wrapper .widget-switch-btn.right:active {\n        left: 30%;\n        transition: left 0s;\n        width: 70%;\n        border-radius: 45%; }\n  .widget-switch.auto .widget-switch-btn-wrapper.disabled {\n    opacity: 0.5; }\n  .widget-switch.auto .widget-switch-btn-wrapper.no-switch .left:active {\n    width: 30px;\n    border-radius: 50%; }\n  .widget-switch.auto .widget-switch-btn-wrapper.no-switch .left .right:active {\n    width: 30px;\n    left: 20px;\n    border-radius: 50%; }\n\nhtml.dj_android .widget-switch.auto .widget-switch-btn-wrapper {\n  position: relative;\n  display: block;\n  height: 20px;\n  width: 44px;\n  background: #898989;\n  border: none;\n  box-shadow: none;\n  border-radius: 100px;\n  cursor: pointer;\n  transition: all .3s ease; }\n  html.dj_android .widget-switch.auto .widget-switch-btn-wrapper .widget-switch-btn {\n    position: absolute;\n    left: -2px;\n    top: -3px;\n    display: block;\n    width: 26px;\n    height: 26px;\n    border-radius: 100px;\n    background: white;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\n    content: '';\n    transition: all .3s ease; }\n  html.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked {\n    background: #6FBEB5;\n    border: none;\n    box-shadow: none; }\n    html.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked .widget-switch-btn {\n      left: 20px;\n      background: #179588; }\n  html.dj_android .widget-switch.auto .widget-switch-btn-wrapper.disabled {\n    background: #D5D5D5;\n    pointer-events: none; }\n    html.dj_android .widget-switch.auto .widget-switch-btn-wrapper.disabled .widget-switch-btn {\n      background: #BCBDBC; }\n\nhtml.dj_android .form-horizontal.widget-switch-label.android .form-group .widget-switch.android {\n  padding-top: 8px;\n  padding-bottom: 8px; }\n\nhtml.dj_ios .widget-switch.auto .widget-switch-btn-wrapper {\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-radius: 20px;\n  cursor: pointer;\n  display: inline-block;\n  height: 30px;\n  position: relative;\n  vertical-align: middle;\n  width: 50px;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-box-sizing: content-box;\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n  -webkit-background-clip: content-box;\n  background-clip: content-box; }\n  html.dj_ios .widget-switch.auto .widget-switch-btn-wrapper.checked {\n    transition: border 0.4s, box-shadow 0.4s, background-color 1.2s; }\n  html.dj_ios .widget-switch.auto .widget-switch-btn-wrapper.un-checked {\n    border-color: #dfdfdf;\n    box-shadow: #dfdfdf 0 0 0 0 inset;\n    transition: border 0.4s, box-shadow 0.4s; }\n  html.dj_ios .widget-switch.auto .widget-switch-btn-wrapper .widget-switch-btn {\n    background: #fff;\n    border-radius: 100%;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\n    height: 30px;\n    position: absolute;\n    top: 0;\n    width: 30px; }\n    html.dj_ios .widget-switch.auto .widget-switch-btn-wrapper .widget-switch-btn.left {\n      left: 0;\n      transition: background-color 0.4s, left 0.2s; }\n      html.dj_ios .widget-switch.auto .widget-switch-btn-wrapper .widget-switch-btn.left:active {\n        width: 70%;\n        border-radius: 45%; }\n    html.dj_ios .widget-switch.auto .widget-switch-btn-wrapper .widget-switch-btn.right {\n      left: 20px;\n      transition: background-color 0.4s, left 0.2s;\n      background-color: white; }\n      html.dj_ios .widget-switch.auto .widget-switch-btn-wrapper .widget-switch-btn.right:active {\n        left: 30%;\n        transition: left 0s;\n        width: 70%;\n        border-radius: 45%; }\n  html.dj_ios .widget-switch.auto .widget-switch-btn-wrapper.disabled {\n    opacity: 0.5; }\n  html.dj_ios .widget-switch.auto .widget-switch-btn-wrapper.no-switch .left:active {\n    width: 30px;\n    border-radius: 50%; }\n  html.dj_ios .widget-switch.auto .widget-switch-btn-wrapper.no-switch .left .right:active {\n    width: 30px;\n    left: 20px;\n    border-radius: 50%; }\n\n.form-horizontal.widget-switch-label .form-group .widget-switch {\n  float: left; }\n  @media (min-width: 320px) and (max-width: 736px) {\n    .form-horizontal.widget-switch-label .form-group .widget-switch {\n      float: right; } }\n  @media (min-width: 768px) and (max-width: 1024px) {\n    .form-horizontal.widget-switch-label .form-group .widget-switch {\n      float: right; } }\n\n.form-horizontal.widget-switch-label .form-group .control-label {\n  float: right;\n  padding-top: 8px;\n  padding-bottom: 8px; }\n  @media (min-width: 320px) and (max-width: 736px) {\n    .form-horizontal.widget-switch-label .form-group .control-label {\n      float: left; } }\n  @media (min-width: 768px) and (max-width: 1024px) {\n    .form-horizontal.widget-switch-label .form-group .control-label {\n      float: left; } }\n\n.form-horizontal.widget-switch-label.android .form-group .widget-switch.android {\n  padding-top: 8px;\n  padding-bottom: 8px; }\n\n.mx-table .widget-switch.android {\n  padding-top: 6px;\n  padding-bottom: 7px; }\n\n.widget-switch.iOS .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-default {\n  background-color: #64bd63;\n  border-color: #64bd63;\n  box-shadow: #64bd63 0 0 0 16px inset; }\n\n.widget-switch.iOS .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-success {\n  background-color: #76CA02;\n  border-color: #76CA02;\n  box-shadow: #76CA02 0 0 0 16px inset; }\n\n.widget-switch.iOS .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-info {\n  background-color: #48B0F7;\n  border-color: #48B0F7;\n  box-shadow: #48B0F7 0 0 0 16px inset; }\n\n.widget-switch.iOS .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-primary {\n  background-color: #0595DB;\n  border-color: #0595DB;\n  box-shadow: #0595DB 0 0 0 16px inset; }\n\n.widget-switch.iOS .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-warning {\n  background-color: #f99b1d;\n  border-color: #f99b1d;\n  box-shadow: #f99b1d 0 0 0 16px inset; }\n\n.widget-switch.iOS .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-danger {\n  background-color: #ed1c24;\n  border-color: #ed1c24;\n  box-shadow: #ed1c24 0 0 0 16px inset; }\n\n.widget-switch.iOS .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-inverse {\n  background-color: #252C36;\n  border-color: #252C36;\n  box-shadow: #252C36 0 0 0 16px inset; }\n\n.widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-default {\n  background-color: #92cec7; }\n  .widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-default .widget-switch-btn {\n    background: #6FBEB5; }\n\n.widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-success {\n  background-color: #94fd03; }\n  .widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-success .widget-switch-btn {\n    background: #76CA02; }\n\n.widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-info {\n  background-color: #79c5f9; }\n  .widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-info .widget-switch-btn {\n    background: #48B0F7; }\n\n.widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-primary {\n  background-color: #19b0fa; }\n  .widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-primary .widget-switch-btn {\n    background: #0595DB; }\n\n.widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-warning {\n  background-color: #fab14f; }\n  .widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-warning .widget-switch-btn {\n    background: #f99b1d; }\n\n.widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-danger {\n  background-color: #f14b52; }\n  .widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-danger .widget-switch-btn {\n    background: #ed1c24; }\n\n.widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-inverse {\n  background-color: #3a4554; }\n  .widget-switch.android .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-inverse .widget-switch-btn {\n    background: #252C36; }\n\n.widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-default {\n  background-color: #64bd63;\n  border-color: #64bd63;\n  box-shadow: #64bd63 0 0 0 16px inset; }\n\n.widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-success {\n  background-color: #76CA02;\n  border-color: #76CA02;\n  box-shadow: #76CA02 0 0 0 16px inset; }\n\n.widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-info {\n  background-color: #48B0F7;\n  border-color: #48B0F7;\n  box-shadow: #48B0F7 0 0 0 16px inset; }\n\n.widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-primary {\n  background-color: #0595DB;\n  border-color: #0595DB;\n  box-shadow: #0595DB 0 0 0 16px inset; }\n\n.widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-warning {\n  background-color: #f99b1d;\n  border-color: #f99b1d;\n  box-shadow: #f99b1d 0 0 0 16px inset; }\n\n.widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-danger {\n  background-color: #ed1c24;\n  border-color: #ed1c24;\n  box-shadow: #ed1c24 0 0 0 16px inset; }\n\n.widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-inverse {\n  background-color: #252C36;\n  border-color: #252C36;\n  box-shadow: #252C36 0 0 0 16px inset; }\n\nhtml.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-default {\n  background-color: #92cec7; }\n  html.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-default .widget-switch-btn {\n    background: #6FBEB5; }\n\nhtml.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-success {\n  background-color: #94fd03; }\n  html.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-success .widget-switch-btn {\n    background: #76CA02; }\n\nhtml.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-info {\n  background-color: #79c5f9; }\n  html.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-info .widget-switch-btn {\n    background: #48B0F7; }\n\nhtml.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-primary {\n  background-color: #19b0fa; }\n  html.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-primary .widget-switch-btn {\n    background: #0595DB; }\n\nhtml.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-warning {\n  background-color: #fab14f; }\n  html.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-warning .widget-switch-btn {\n    background: #f99b1d; }\n\nhtml.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-danger {\n  background-color: #f14b52; }\n  html.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-danger .widget-switch-btn {\n    background: #ed1c24; }\n\nhtml.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-inverse {\n  background-color: #3a4554; }\n  html.dj_android .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-inverse .widget-switch-btn {\n    background: #252C36; }\n\nhtml.dj_ios .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-default {\n  background-color: #64bd63;\n  border-color: #64bd63;\n  box-shadow: #64bd63 0 0 0 16px inset; }\n\nhtml.dj_ios .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-success {\n  background-color: #76CA02;\n  border-color: #76CA02;\n  box-shadow: #76CA02 0 0 0 16px inset; }\n\nhtml.dj_ios .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-info {\n  background-color: #48B0F7;\n  border-color: #48B0F7;\n  box-shadow: #48B0F7 0 0 0 16px inset; }\n\nhtml.dj_ios .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-primary {\n  background-color: #0595DB;\n  border-color: #0595DB;\n  box-shadow: #0595DB 0 0 0 16px inset; }\n\nhtml.dj_ios .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-warning {\n  background-color: #f99b1d;\n  border-color: #f99b1d;\n  box-shadow: #f99b1d 0 0 0 16px inset; }\n\nhtml.dj_ios .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-danger {\n  background-color: #ed1c24;\n  border-color: #ed1c24;\n  box-shadow: #ed1c24 0 0 0 16px inset; }\n\nhtml.dj_ios .widget-switch.auto .widget-switch-btn-wrapper.checked.widget-switch-btn-wrapper-inverse {\n  background-color: #252C36;\n  border-color: #252C36;\n  box-shadow: #252C36 0 0 0 16px inset; }\n"

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, react_1, classNames) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Label = function (_a) {
        var children = _a.children, className = _a.className, label = _a.label, style = _a.style, weight = _a.weight;
        return react_1.createElement("div", { className: classNames("form-horizontal widget-switch-label", className), style: style }, react_1.createElement("div", { className: "form-group" }, react_1.createElement("div", { className: "col-sm-" + weight + " col-xs-" + weight }, react_1.createElement("label", { className: "control-label" }, label)), react_1.createElement("div", {
            className: "col-sm-" + (12 - weight) + " col-xs-" + (12 - weight)
        }, children)));
    };
    exports.Label = Label;
    Label.defaultProps = {
        weight: 6
    };
    Label.displayName = "Label";
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(2), __webpack_require__(7), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, react_1, classNames, Switch_1, SwitchContainer_1, Label_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var preview = (function (_super) {
        __extends(preview, _super);
        function preview() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        preview.prototype.render = function () {
            var maxLabelWidth = 11;
            if (this.props.label.trim()) {
                return react_1.createElement(Label_1.Label, {
                    className: classNames(this.props.class),
                    label: this.props.label,
                    style: SwitchContainer_1.default.parseStyle(this.props.style),
                    weight: this.props.labelWidth > maxLabelWidth ? maxLabelWidth : this.props.labelWidth
                }, this.renderSwitch(true));
            }
            else {
                return this.renderSwitch();
            }
        };
        preview.prototype.renderSwitch = function (hasLabel) {
            if (hasLabel === void 0) { hasLabel = false; }
            return react_1.createElement(Switch_1.Switch, {
                className: !hasLabel ? this.props.class : undefined,
                isChecked: true,
                onClick: undefined,
                status: this.props.editable === "default" ? "enabled" : "disabled",
                style: !hasLabel ? SwitchContainer_1.default.parseStyle(this.props.style) : undefined
            });
        };
        return preview;
    }(react_1.Component));
    exports.preview = preview;
    function getPreviewCss() {
        return __webpack_require__(3);
    }
    exports.getPreviewCss = getPreviewCss;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, react_1, classNames) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Alert = function (_a) {
        var className = _a.className, bootstrapStyle = _a.bootstrapStyle, message = _a.message;
        return message
            ? react_1.createElement("div", { className: classNames("alert alert-" + bootstrapStyle, className) }, message)
            : null;
    };
    exports.Alert.displayName = "Alert";
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(2), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, react_1, Switch_1, Label_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SwitchContainer = (function (_super) {
        __extends(SwitchContainer, _super);
        function SwitchContainer(props) {
            var _this = _super.call(this, props) || this;
            _this.subscriptionHandles = [];
            _this.state = _this.updateState(props.mxObject);
            _this.handleToggle = _this.handleToggle.bind(_this);
            _this.subscriptionCallback = _this.subscriptionCallback.bind(_this);
            _this.handleValidations = _this.handleValidations.bind(_this);
            return _this;
        }
        SwitchContainer.prototype.render = function () {
            var maxLabelWidth = 11;
            if (this.props.label.trim()) {
                return react_1.createElement(Label_1.Label, {
                    className: "" + this.props.class,
                    label: this.props.label,
                    style: SwitchContainer.parseStyle(this.props.style),
                    weight: this.props.labelWidth > maxLabelWidth ? maxLabelWidth : this.props.labelWidth
                }, this.renderSwitch(true));
            }
            return this.renderSwitch();
        };
        SwitchContainer.prototype.componentWillReceiveProps = function (newProps) {
            this.resetSubscriptions(newProps.mxObject);
            this.setState(this.updateState(newProps.mxObject));
        };
        SwitchContainer.prototype.componentWillUnmount = function () {
            this.subscriptionHandles.forEach(mx.data.unsubscribe);
        };
        SwitchContainer.prototype.renderSwitch = function (hasLabel) {
            if (hasLabel === void 0) { hasLabel = false; }
            var _a = this.props, className = _a.class, style = _a.style;
            return react_1.createElement(Switch_1.Switch, {
                alertMessage: this.state.alertMessage,
                className: !hasLabel ? className : undefined,
                isChecked: this.state.isChecked,
                onClick: this.handleToggle,
                status: this.getSwitchStatus(!this.isReadOnly()),
                style: !hasLabel ? SwitchContainer.parseStyle(style) : undefined
            });
        };
        SwitchContainer.prototype.getAttributeValue = function (attribute, mxObject) {
            return !!mxObject && mxObject.get(attribute);
        };
        SwitchContainer.prototype.isReadOnly = function () {
            var _a = this.props, booleanAttribute = _a.booleanAttribute, editable = _a.editable, mxObject = _a.mxObject, readOnly = _a.readOnly;
            if (editable === "default" && mxObject) {
                return readOnly || mxObject.isReadonlyAttr(booleanAttribute);
            }
            return true;
        };
        SwitchContainer.prototype.getSwitchStatus = function (enabled) {
            if (this.props.mxObject) {
                return enabled ? "enabled" : "disabled";
            }
            return "no-context";
        };
        SwitchContainer.prototype.handleToggle = function () {
            var _a = this.props, booleanAttribute = _a.booleanAttribute, mxObject = _a.mxObject;
            if (mxObject) {
                mxObject.set(booleanAttribute, !mxObject.get(booleanAttribute));
            }
        };
        SwitchContainer.prototype.resetSubscriptions = function (mxObject) {
            this.subscriptionHandles.forEach(mx.data.unsubscribe);
            this.subscriptionHandles = [];
            if (mxObject) {
                this.subscriptionHandles.push(mx.data.subscribe({
                    callback: this.subscriptionCallback,
                    guid: mxObject.getGuid()
                }));
                this.subscriptionHandles.push(mx.data.subscribe({
                    attr: this.props.booleanAttribute,
                    callback: this.subscriptionCallback,
                    guid: mxObject.getGuid()
                }));
                this.subscriptionHandles.push(mx.data.subscribe({
                    callback: this.handleValidations,
                    guid: mxObject.getGuid(),
                    val: true
                }));
            }
        };
        SwitchContainer.prototype.updateState = function (mxObject) {
            if (mxObject === void 0) { mxObject = this.props.mxObject; }
            return {
                alertMessage: "",
                isChecked: this.getAttributeValue(this.props.booleanAttribute, mxObject)
            };
        };
        SwitchContainer.prototype.subscriptionCallback = function () {
            this.setState(this.updateState());
        };
        SwitchContainer.prototype.handleValidations = function (validations) {
            var validationMessage = validations[0].getErrorReason(this.props.booleanAttribute);
            validations[0].removeAttribute(this.props.booleanAttribute);
            if (validationMessage) {
                this.setState({ alertMessage: validationMessage });
            }
        };
        SwitchContainer.parseStyle = function (style) {
            if (style === void 0) { style = ""; }
            try {
                return style.split(";").reduce(function (styleObject, line) {
                    var pair = line.split(":");
                    if (pair.length === 2) {
                        var name_1 = pair[0].trim().replace(/(-.)/g, function (match) { return match[1].toUpperCase(); });
                        styleObject[name_1] = pair[1].trim();
                    }
                    return styleObject;
                }, {});
            }
            catch (error) {
                window.console.error("Failed to parse style", style, error);
            }
            return {};
        };
        return SwitchContainer;
    }(react_1.Component));
    exports.default = SwitchContainer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ })
/******/ ])));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

//# sourceURL=Switch.webmodeler.js
